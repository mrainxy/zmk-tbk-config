/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define NUMBERS 4
#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4

&mt { retro-tap; };

&sk {
    //release-after-ms = <2000>;

    quick-release;

    // /delete-property/ ignore-modifiers;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_caps {
            timeout-ms = <50>;
            key-positions = <24 35>;
            bindings = <&caps_word>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp ESC>;
        };
    };

    macros {
        none_blk: none_blk {
            label = "NON_BLOCKING";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(COMMA) &kp EQUAL>;
        };

        cmd_mode: cmd_mode {
            label = "VIM_CMD_MODE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESC &kp LS(SEMI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R      &kp T         &kp Y         &kp U      &kp I         &kp O    &kp P     &kp BSPC
&kp CAPS   &kp A  &kp S  &kp D      &kp F      &kp G         &kp H         &kp J      &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C      &kp V      &kp B         &kp N         &kp M      &kp COMMA     &kp DOT  &kp FSLH  &kp RWIN
                         &kp LSHFT  &kp ENTER  &kp NUMBER_1  &kp NUMBER_2  &kp SPACE  &kp NUMBER_3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &none   &kp PLUS  &kp MINUS   &kp F11    &kp F12     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp PERCENT   &kp BACKSPACE
&kp CAPS   &kp F1  &kp F2    &kp F3      &kp F4     &kp F5      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL     &kp ASTERISK  &kp SLASH
&kp LCTRL  &kp F6  &kp F7    &kp F8      &kp F9     &kp F10     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT       &kp SLASH     &kp RIGHT_ALT
                             &kp LSHIFT  &kp ENTER  &kp DELETE  &to 0         &kp SPACE     &kp TAB
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp PIPE     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH  &kp GRAVE      &kp HOME   &kp END            &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp ASTERISK     &kp BSPC
&kp CAPS   &kp AT_SIGN  &kp HASH              &kp DOLLAR             &kp INT3       &kp AMPERSAND  &kp MINUS  &kp K_VOLUME_DOWN  &kp LBKT        &kp RBKT         &kp K_VOLUME_UP  &kp PRINTSCREEN
&kp LCTRL  &trans       &trans                &trans                 &trans         &trans         &kp UNDER  &kp LEFT           &kp UP          &kp DOWN         &kp RIGHT        &kp TILDE
                                              &kp LSHFT              &kp ENTER      &trans         &kp TAB    &kp SPACE          &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans      &bt BT_CLR       &rgb_ug RGB_COLOR_HSB(0,91,50)  &rgb_ug RGB_COLOR_HSB(239,95,51)  &rgb_ug RGB_COLOR_HSB(129,96,45)  &rgb_ug RGB_COLOR_HSB(179,93,51)  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&bl BL_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI                 &rgb_ug RGB_BRI                   &rgb_ug RGB_SPI                   &rgb_ug RGB_EFF                   &trans        &trans        &trans        &trans        &trans        &trans
&bl BL_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD                 &rgb_ug RGB_BRD                   &rgb_ug RGB_SPD                   &rgb_ug RGB_EFR                   &trans        &trans        &trans        &trans        &trans        &trans
                                                             &trans                            &trans                            &trans                            &none         &trans        &to 0
            >;
        };
    };
};
